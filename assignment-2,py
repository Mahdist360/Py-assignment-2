import json

class Person:
    def __init__(self, name, age, address):
        self.name = name
        self.age = age
        self.address = address

    def display_person_info(self):
        print(f"Name: {self.name}, Age: {self.age}, Address: {self.address}")

class Student(Person):
    def __init__(self, name, age, address, student_id):
        super().__init__(name, age, address)
        self.student_id = student_id
        self.grades = {}
        self.courses = []

    def add_grade(self, subject, grade):
        self.grades[subject] = grade

    def enroll_course(self, course):
        self.courses.append(course)

    def display_student_info(self):
        self.display_person_info()
        print(f"ID: {self.student_id}")
        print(f"Enrolled Courses: {', '.join([course.course_name for course in self.courses])}")
        print(f"Grades: {self.grades}")

class Course:
    def __init__(self, course_name, course_code, instructor):
        self.course_name = course_name
        self.course_code = course_code
        self.instructor = instructor
        self.students = []

    def add_student(self, student):
        self.students.append(student)

    def display_course_info(self):
        print(f"Course: {self.course_name}, Code: {self.course_code}, Instructor: {self.instructor}")
        print("Enrolled Students:", [student.name for student in self.students])

def save_data(students, courses, filename="data.json"):
    data = {
        "students": [{
            "name": s.name, "age": s.age, "address": s.address, "student_id": s.student_id,
            "grades": s.grades, "courses": [c.course_code for c in s.courses]
        } for s in students],
        "courses": [{
            "course_name": c.course_name, "course_code": c.course_code,
            "instructor": c.instructor, "students": [s.student_id for s in c.students]
        } for c in courses]
    }
    with open(filename, "w") as f:
        json.dump(data, f)
    print("Data saved successfully.")

def load_data(students, courses, filename="data.json"):
    with open(filename, "r") as f:
        data = json.load(f)

    # Clear existing data
    students.clear()
    courses.clear()
    
    student_map = {}
    course_map = {}
    
    # Load students
    for s in data["students"]:
        student = Student(s["name"], s["age"], s["address"], s["student_id"])
        student.grades = s["grades"]
        students.append(student)
        student_map[s["student_id"]] = student
    
    # Load courses
    for c in data["courses"]:
        course = Course(c["course_name"], c["course_code"], c["instructor"])
        courses.append(course)
        course_map[c["course_code"]] = course

    # Link students to courses
    for s in data["students"]:
        student = student_map[s["student_id"]]
        for course_code in s["courses"]:
            course = course_map.get(course_code)
            if course:
                student.enroll_course(course)
                course.add_student(student)

    print("Data loaded successfully.")

def find_student(student_id, students):
    for student in students:
        if student.student_id == student_id:
            return student
    print("Student not found.")
    return None

def find_course(course_code, courses):
    for course in courses:
        if course.course_code == course_code:
            return course
    print("Course not found.")
    return None

def main():
    students = []
    courses = []
    
    while True:
        print("\n==== Student Management System ====")
        print("1. Add New Student")
        print("2. Add New Course")
        print("3. Enroll Student in Course")
        print("4. Add Grade for Student")
        print("5. Display Student Details")
        print("6. Display Course Details")
        print("7. Save Data to File")
        print("8. Load Data from File")
        print("0. Exit")
        
        choice = input("Select Option: ")
        
        if choice == '1':
            # Add new student
            name = input("Enter Name: ")
            age = int(input("Enter Age: "))
            address = input("Enter Address: ")
            student_id = input("Enter Student ID: ")
            student = Student(name, age, address, student_id)
            students.append(student)
            print(f"Student {name} (ID: {student_id}) added successfully.")
        
        elif choice == '2':
            # Add new course
            course_name = input("Enter Course Name: ")
            course_code = input("Enter Course Code: ")
            instructor = input("Enter Instructor Name: ")
            course = Course(course_name, course_code, instructor)
            courses.append(course)
            print(f"Course {course_name} (Code: {course_code}) created with instructor {instructor}.")
        
        elif choice == '3':
            # Enroll student in course
            student_id = input("Enter Student ID: ")
            course_code = input("Enter Course Code: ")
            student = find_student(student_id, students)
            course = find_course(course_code, courses)
            if student and course:
                student.enroll_course(course)
                course.add_student(student)
                print(f"Student {student.name} (ID: {student_id}) enrolled in {course.course_name} (Code: {course_code}).")
        
        elif choice == '4':
            # Add grade for student
            student_id = input("Enter Student ID: ")
            course_code = input("Enter Course Code: ")
            grade = input("Enter Grade: ")
            student = find_student(student_id, students)
            course = find_course(course_code, courses)
            if student and course and course in student.courses:
                student.add_grade(course.course_name, grade)
                print(f"Grade {grade} added for {student.name} in {course.course_name}.")
            else:
                print("Student is not enrolled in this course.")
        
        elif choice == '5':
            # Display student details
            student_id = input("Enter Student ID: ")
            student = find_student(student_id, students)
            if student:
                student.display_student_info()
        
        elif choice == '6':
            # Display course details
            course_code = input("Enter Course Code: ")
            course = find_course(course_code, courses)
            if course:
                course.display_course_info()
        
        elif choice == '7':
            # Save data to file
            save_data(students, courses)
        
        elif choice == '8':
            # Load data from file
            load_data(students, courses)
        
        elif choice == '0':
            print("Exiting Student Management System. Goodbye!")
            break
        else:
            print("Invalid option. Please try again.")

if __name__ == "__main__":
    main()
